
name: Publish

on:

  push:
    branches: [ main, develop, feature/improved-workflow]
    tags: 'v*.*.*'
    
  pull_request:
    branches: '*'
    types: opened
  
  release:
    types: [published]

  workflow_dispatch:

jobs:

  init:
    runs-on: ubuntu-latest
    outputs:
      build_type: ${{ steps.setvars.outputs.build_type }}
      build_tests: ${{ steps.setvars.outputs.build_tests }}

    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

      - name: Set variables
        id: setvars
        #Only build the tests in a debug build, tests currently don't build in release mode
        run: |
          echo ${{github.base_ref}}
          echo ${{github.ref}}
          if [[ "${{github.base_ref}}" == "develop" || "${{github.ref}}" == "refs/heads/develop" ]]; then
            echo "::set-output name=build_type::DEBUG"
            echo "::set-output name=build_tests::TRUE"
            echo Debug build
          else
            echo "::set-output name=build_type::RELEASE"
            echo "::set-output name=build_tests::FALSE"
          fi

  publish:

    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [init]
    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: project8/p8compute_dependencies
          tag-sha: false
          tag-semver: |
            {{raw}}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          
      - name: List platforms
        run: | 
            echo Platforms: ${{ steps.setup_buildx.outputs.platforms }}
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set env
        run: | 
            echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            echo Version: ${{ env.RELEASE_VERSION }}
        
      - name: Push to Docker Hub
        id: build_push
        uses: docker/build-push-action@v2
        with:
          context: Dependencies/
          file: Dependencies/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            dependencies_version=${{ env.RELEASE_VERSION }}
          tags: ${{ steps.docker_meta.outputs.tags }}

  notify-packages:
  
      if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/') ) || github.event_name == 'release'
      name: Trigger new docker images of the P8 software packages
      runs-on: ubuntu-latest
      needs: [publish]
      strategy:
        matrix:
          repo: ['project8/katydid', 'project8/locust_mc', 'project8/mermithid', 'project8/psyllid']
      steps:
      
        - name: Repository dispatch
          uses: peter-evans/repository-dispatch@v1
          with:
            token: ${{ secrets.REPO_ACCESS_TOKEN }}
            repository: ${{ matrix.repo }}
            event-type: release-event
