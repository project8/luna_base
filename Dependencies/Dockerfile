ARG img_repo=ubuntu
ARG img_tag=20.04

FROM ${img_repo}:${img_tag} as base_image

# Set bash as the default shell
SHELL ["/bin/bash", "-c"]

# Install as many dependencies as possible using apt
RUN apt-get update &&\
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        build-essential \
        dpkg-dev \
        cmake \
        git \
        openssl \
        python3-dev \
        pipenv \
        wget \
        libgsl-dev \
        libopenblas-dev \
        liblapack-dev \
        libfreetype-dev \
        libx11-dev \
        libxpm-dev \
        libxft-dev \
        libxext-dev \
        libpng-dev \
        libjpeg-dev \
        libfftw3-dev \
        libboost-all-dev \
        libeigen3-dev \
        libhdf5-dev \
        libmatio-dev \
        librabbitmq-dev \
        libyaml-cpp-dev \
        rapidjson-dev \
        pybind11-dev \
        &&\
    apt-get clean &&\
    /bin/true

# ROOT is currently not available in the package manager (latest is in xenial)
RUN ROOT_TARBALL="root_v6.22.06.Linux-ubuntu20-x86_64-gcc9.3.tar.gz" &&\
    cd /usr/local &&\
    wget https://root.cern/download/$ROOT_TARBALL &&\
    tar -xzf $ROOT_TARBALL

ENV CMAKE_LIBRARY_PATH=/usr/lib64
ENV RapidJSON_DIR=/usr/lib64/cmake

ENV COMMON_TAG=v1.0.0.beta
ENV COMMON_BUILD_PREFIX=/usr/local/p8/common/$COMMON_TAG

# Create the setup.sh script
# Includes a one-time-use-only guard to avoid repeatedly adding to these environment variables.
RUN mkdir -p $COMMON_BUILD_PREFIX &&\
    chmod -R 777 $COMMON_BUILD_PREFIX/.. &&\
    cd $COMMON_BUILD_PREFIX &&\
    echo "# This file is automatically generated by luna/Dependencies/Dockerfile." > setup.sh &&\
    echo '[ -n "$P8COMPUTE_COMMON_SETUP" ] && return || readonly P8COMPUTE_COMMON_SETUP=1' >> setup.sh &&\
    echo "export COMMON_TAG=$COMMON_TAG" >> setup.sh &&\
    echo "export COMMON_BUILD_PREFIX=$COMMON_BUILD_PREFIX" >> setup.sh &&\
    echo 'ln -sfT $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX/../current' >> setup.sh &&\
    echo 'export PATH=$COMMON_BUILD_PREFIX/bin:$PATH' >> setup.sh &&\
    echo 'export LD_LIBRARY_PATH=$COMMON_BUILD_PREFIX/lib:$LD_LIBRARY_PATH' >> setup.sh &&\
    echo 'source /usr/local/root/bin/thisroot.sh' >> setup.sh &&\
    /bin/true

#RUN apt-get update && apt-get install -y 

# Python package installation
# hash command needed because pip3 moves after the upgrade
RUN pip3 install --upgrade pip &&\
    pip3 install \
        'iminuit' \
        'numericalunits' \
        'PyYAML==5.4.1' \
        'pyparsing==2.4.7' \
        'dnspython==1.12.0' \
        'cycler==0.10.0' \
        'python-dateutil==2.8.1' \
        'numpy>=1.14' \
        'Cython>=0.22' \
        'pystan==2.19.1.1' \
        'uproot4>=4.0.0' \
        'lz4' \
        'pbr==5.5.1' \
        'six' \
        'colorlog' \
        'h5py' \
        'matplotlib' \
        'scipy==1.6.1' \
        &&\
    /bin/true


##########################
#FROM base_image as common

#RUN mkdir -p /tmp_install

##########################
#FROM common as cmake_done

## cmake (install manually because the version in yum is too old, v3.11)
#RUN source $COMMON_BUILD_PREFIX/setup.sh &&\
#    cd /tmp_install &&\
#    wget https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz &&\
#    tar -xvzf cmake-3.18.4.tar.gz &&\
#    cd cmake-3.18.4 &&\
#    ./configure --prefix=$COMMON_BUILD_PREFIX &&\
#    make -j3 install &&\
#    /bin/true

##########################
#FROM common as hdf5_done

## hdf5
#RUN source $COMMON_BUILD_PREFIX/setup.sh &&\
#    cd /tmp_install &&\
#    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.7/src/hdf5-1.10.7.tar.gz &&\
#    tar -xvzf hdf5-1.10.7.tar.gz &&\
#    cd hdf5-1.10.7 &&\
#    ./configure --prefix=$COMMON_BUILD_PREFIX --enable-cxx --enable-shared --enable-unsupported --enable-threadsafe &&\
#    make -j3 install &&\
#    /bin/true

########################
#FROM base_image

#COPY --from=common $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=cmake_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=git_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=hdf5_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=fftw3_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=matio_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=boost_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=root_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=gsl_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX
#COPY --from=rabbitmq_done $COMMON_BUILD_PREFIX $COMMON_BUILD_PREFIX

#RUN cd $COMMON_BUILD_PREFIX &&\
#    echo "source $COMMON_BUILD_PREFIX/bin/thisroot.sh" >> setup.sh &&\
#    /bin/true
